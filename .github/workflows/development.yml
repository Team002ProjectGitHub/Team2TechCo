name: CI/CD Pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions

on:
  push:
    branches:
      - Karami

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Print trigger information
        run: |
          echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Create deployment artifact
        run: |
          mkdir -p deployment
          dotnet publish -c Release -o deployment
          tar -czf "${{ github.sha }}.tar.gz" -C deployment .

      - name: Store artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run unit tests
        run: dotnet test --no-restore --configuration Release --filter TestCategory=Unit

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run integration tests
        run: dotnet test --no-restore --configuration Release --filter TestCategory=Integration

  prepare-release-on-server:
    name: Prepare Release on AWS Server
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: .

      - name: Extract deployment artifact
        run: tar -xzf ${{ github.sha }}.tar.gz

      - name: Set up version label
        id: vars
        run: echo "VERSION_LABEL=new-version-$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.SECRET_ACCESS_KEY }}
          application_name: TeamTwo-UI-env
         
          version_label: ${{ env.VERSION_LABEL }}
          region: us-east-1
          wait_for_deployment: true
          deployment_package: ${{ github.sha }}.tar.gz
          use_existing_version_if_available: true