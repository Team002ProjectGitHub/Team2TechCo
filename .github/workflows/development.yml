name: CI/CD Pipeline
run-name: ${{ github.actor }} is testing out GitHub Actions

on:
  push:
    branches:
      - Kunle

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Print trigger information
        run: |
          echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
          echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
          echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore
      
      - name: Publish the application
        run: dotnet publish --no-restore --configuration Release --output ./publish

      - name: Create deployment artifact
        env:
          GITHUB_SHA: ${{ github.sha }}
        run: |
          mkdir -p artifact
          cp -r ./publish/* artifact/
          tar -czf "${GITHUB_SHA}.tar.gz" -C artifact .

      - name: Store artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: ${{ github.sha }}.tar.gz

  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          
      - name: Restore dependencies
        run: dotnet restore

      - name: Run unit tests
        run: dotnet test --no-restore --configuration Release --filter TestCategory=Unit

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run integration tests
        run: dotnet test --no-restore --configuration Release --filter TestCategory=Integration

  prepare-release-on-server:
    name: Prepare Release on AWS Server
    runs-on: ubuntu-latest
    needs: integration-tests
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.TEAM_KEY_PAIR }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Server
        run: |
          scp -i ~/.ssh/id_rsa ./artifact/254df9f12f0ed5451955b5713ea76c4ac8cdf0c8.tar.gz ubuntu@18.233.205.97:/var/www/html
          ssh -i ~/.ssh/id_rsa ubuntu@18.233.205.97 'tar -xzf /var/www/html/254df9f12f0ed5451955b5713ea76c4ac8cdf0c8.tar.gz -C /var/www/html'